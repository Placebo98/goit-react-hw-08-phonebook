{"version":3,"file":"static/js/102.7d2dcbab.chunk.js","mappings":"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","sources":["components/Form/Form.styled.js","components/Form/Form.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","pages/ContactPage.styled.js","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  max-width: 400px;\n  background-color: transparent;\n  border: 2px solid rgba(255, 255, 255, 0.5);\n  border-radius: 20px;\n  backdrop-filter: blur(55px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 2rem 3rem;\n`;\n\nexport const Inputbox = styled.div`\n  position: relative;\n  margin: 30px 0;\n  max-width: 310px;\n  border-bottom: 2px solid #fff;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 25px;\n  margin-bottom: 10px;\n  color: white;\n`;\n\nexport const FormInput = styled(Field)`\n  width: 100%;\n  height: 30px;\n  background: transparent;\n  border: none;\n  outline: none;\n  font-size: 1rem;\n  padding: 0 35px 0 5px;\n  color: #fff;\n`;\n\nexport const FormButton = styled.button`\n  width: 150px;\n  height: 40px;\n  border-radius: 40px;\n  background-color: rgb(255, 255, 255, 1);\n  border: none;\n  outline: none;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 600;\n  margin: 20px 0 20px;\n  transition: all 0.4s ease;\n  &:hover {\n    background-color: gold;\n  }\n`;\n\nexport const StyledErrorName = styled(ErrorMessage)`\n  color: red;\n`;\n\nexport const StyledErrorNumber = styled(ErrorMessage)`\n  color: red;\n`;\nexport const Title = styled.h2`\n  color: gold;\n`;\n","import React from 'react';\nimport { nanoid } from 'nanoid';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  StyledForm,\n  FormInput,\n  FormLabel,\n  FormButton,\n  StyledErrorName,\n  StyledErrorNumber,\n  Inputbox,\n  Title,\n} from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { selectContacts } from 'redux/selectors';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string().min(1, 'Too Short!').required('Required'),\n  number: Yup.number().min(5).required('Required'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={SignupSchema}\n      onSubmit={(values, actions) => {\n        const isContactExists = contacts.find(\n          contact =>\n            contact.name.toLowerCase() === values.name.toLowerCase() ||\n            contact.number === values.number\n        );\n\n        if (isContactExists) {\n          alert(`${values.name} вже в списку ваших контактів`);\n        } else {\n          dispatch(addContact({ id: nanoid(), ...values }));\n        }\n\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <Title>Add new contact</Title>\n        <Inputbox>\n          <FormLabel htmlFor=\"name\">Name</FormLabel>\n          <FormInput type=\"text\" name=\"name\" placeholder=\"Tsaryk Oleg\" />\n          <StyledErrorName name=\"name\" component=\"div\" />\n        </Inputbox>\n        <Inputbox>\n          <FormLabel htmlFor=\"number\">Number</FormLabel>\n          <FormInput type=\"tel\" name=\"number\" placeholder=\"380990512501\" />\n          <StyledErrorNumber name=\"name\" component=\"div\" />\n        </Inputbox>\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterWrapper = styled.div`\n  position: relative;\n  margin: 30px 20px;\n  margin-bottom: 20px;\n  max-width: 310px;\n  border-bottom: 3px solid gold;\n`;\n\nexport const FilterLabel = styled.label`\n  font-size: 25px;\n  margin-bottom: 10px;\n  font-weight: 600;\n  color: gold;\n`;\n\nexport const FilterInput = styled.input`\n  width: 100%;\n  height: 30px;\n  background: transparent;\n  border: none;\n  outline: none;\n  font-size: 1rem;\n  padding: 0 35px 0 5px;\n  color: #fff;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { FilterLabel, FilterWrapper, FilterInput } from './Filter.styled';\nimport { changeContactFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <FilterWrapper>\n      <FilterLabel htmlFor=\"filter\">Find contacts by name</FilterLabel>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        placeholder=\"Name...\"\n        value={filter.filter}\n        onChange={event => {\n          dispatch(changeContactFilter(event.target.value));\n        }}\n      />\n    </FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin-top: 0;\n  align-items: flex-end;\n`;\n\nexport const ListItem = styled.li`\n  font-size: 24px;\n  font-weight: 500;\n  list-style: none;\n  color: black;\n`;\n\nexport const DeleteContactButton = styled.button`\n  width: 100px;\n  height: 25px;\n  border-radius: 40px;\n  background-color: rgb(255, 255, 255, 1);\n  border: none;\n  outline: none;\n  cursor: pointer;\n  font-size: 1rem;\n  font-weight: 400;\n  margin: 10px;\n  transition: all 0.4s ease;\n  &:hover {\n    background-color: gold;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { ListItem, DeleteContactButton, List } from './ContactList.styled';\nimport { deleteContact } from 'redux/operations';\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { getAllContacts } from 'redux/operations';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContacts());\n  }, [dispatch]);\n\n  const visibleContacts = contacts?.filter(contact =>\n    contact?.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <List>\n      {visibleContacts.map(contact => (\n        <ListItem key={contact.id}>\n          {contact.name}:{''}\n          {contact.number}\n          <DeleteContactButton\n            onClick={() => {\n              dispatch(deleteContact(contact.id));\n            }}\n          >\n            Delete\n          </DeleteContactButton>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: grid;\n  align-content: space-evenly;\n  justify-content: center;\n  justify-items: center;\n`;\n","import { ContactForm } from 'components/Form/Form';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Container } from './ContactPage.styled';\n\nexport default function Contacts() {\n  return (\n    <Container>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Inputbox","_templateObject2","FormLabel","_templateObject3","FormInput","Field","_templateObject4","FormButton","_templateObject5","StyledErrorName","ErrorMessage","_templateObject6","StyledErrorNumber","_templateObject7","Title","_templateObject8","SignupSchema","Yup","shape","name","min","required","number","ContactForm","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","find","contact","toLowerCase","alert","concat","addContact","_objectSpread","id","nanoid","resetForm","children","_jsxs","htmlFor","type","placeholder","component","FilterWrapper","FilterLabel","FilterInput","Filter","filter","selectFilter","pattern","title","value","onChange","event","changeContactFilter","target","List","ListItem","DeleteContactButton","ContactList","useEffect","getAllContacts","visibleContacts","includes","map","onClick","deleteContact","Container","Contacts"],"sourceRoot":""}